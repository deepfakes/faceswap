# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR ORGANIZATION
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-03-23 15:33+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=cp1252\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: pygettext.py 1.5\n"


#: tools/sort/cli.py:14
msgid "This command lets you sort images using various methods."
msgstr ""

#: tools/sort/cli.py:23
msgid "Sort faces using a number of different techniques"
msgstr ""

#: tools/sort/cli.py:33 tools/sort/cli.py:40
msgid "data"
msgstr ""

#: tools/sort/cli.py:34
msgid "Input directory of aligned faces."
msgstr ""

#: tools/sort/cli.py:41
msgid "Output directory for sorted aligned faces."
msgstr ""

#: tools/sort/cli.py:50 tools/sort/cli.py:93
msgid "sort settings"
msgstr ""

#: tools/sort/cli.py:52
msgid ""
"R|Sort by method. Choose how images are sorted. \n"
"L|'blur': Sort faces by blurriness.\n"
"L|'face': Use VGG Face to sort by face similarity. This uses a pairwise clustering algorithm to check the distances between 512 features on every face in your set and order them appropriately.\n"
"L|'face-cnn': Sort faces by their landmarks. You can adjust the threshold with the '-t' (--ref_threshold) option.\n"
"L|'face-cnn-dissim': Like 'face-cnn' but sorts by dissimilarity.\n"
"L|'face-yaw': Sort faces by Yaw (rotation left to right).\n"
"L|'hist': Sort faces by their color histogram. You can adjust the threshold with the '-t' (--ref_threshold) option.\n"
"L|'hist-dissim': Like 'hist' but sorts by dissimilarity.\n"
"L|'color-gray': Sort images by the average intensity of the converted grayscale color channel.\n"
"L|'color-luma': Sort images by the average intensity of the converted Y color channel. Bright lighting and oversaturated images will be ranked first.\n"
"L|'color-green': Sort images by the average intensity of the converted Cg color channel. Green images will be ranked first and red images will be last.\n"
"L|'color-orange': Sort images by the average intensity of the converted Co color channel. Orange images will be ranked first and blue images will be last.\n"
"L|'size': Sort images by their size in the original frame. Faces closer to the camera and from higher resolution sources will be sorted first, whilst faces further from the camera and from lower resolution sources will be sorted last.\n"
"Default: face"
msgstr ""

#: tools/sort/cli.py:82 tools/sort/cli.py:109 tools/sort/cli.py:121
#: tools/sort/cli.py:132
msgid "output"
msgstr ""

#: tools/sort/cli.py:83
msgid "Keeps the original files in the input directory. Be careful when using this with rename grouping and no specified output directory as this would keep the original and renamed files in the same directory."
msgstr ""

#: tools/sort/cli.py:95
msgid "Float value. Minimum threshold to use for grouping comparison with 'face-cnn' and 'hist' methods. The lower the value the more discriminating the grouping is. Leaving -1.0 will allow the program set the default value automatically. For face-cnn 7.2 should be enough, with 4 being very discriminating. For hist 0.3 should be enough, with 0.2 being very discriminating. Be careful setting a value that's too low in a directory with many images, as this could result in a lot of directories being created. Defaults: face-cnn 7.2, hist 0.3"
msgstr ""

#: tools/sort/cli.py:110
msgid ""
"R|Default: rename.\n"
"L|'folders': files are sorted using the -s/--sort-by method, then they are organized into folders using the -g/--group-by grouping method.\n"
"L|'rename': files are sorted using the -s/--sort-by then they are renamed."
msgstr ""

#: tools/sort/cli.py:123
msgid "Group by method. When -fp/--final-processing by folders choose the how the images are grouped after sorting. Default: hist"
msgstr ""

#: tools/sort/cli.py:134
msgid "Integer value. Number of folders that will be used to group by blur and face-yaw. For blur folder 0 will be the least blurry, while the last folder will be the blurriest. For face-yaw the number of bins is by how much 180 degrees is divided. So if you use 18, then each folder will be a 10 degree increment. Folder 0 will contain faces looking the most to the left whereas the last folder will contain the faces looking the most to the right. If the number of images doesn't divide evenly into the number of bins, the remaining images get put in the last bin. Default value: 5"
msgstr ""

#: tools/sort/cli.py:145 tools/sort/cli.py:155
msgid "settings"
msgstr ""

#: tools/sort/cli.py:147
msgid "Logs file renaming changes if grouping by renaming, or it logs the file copying/movement if grouping by folders. If no log file is specified  with '--log-file', then a 'sort_log.json' file will be created in the input directory."
msgstr ""

#: tools/sort/cli.py:158
msgid "Specify a log file to use for saving the renaming or grouping information. If specified extension isn't 'json' or 'yaml', then json will be used as the serializer, with the supplied filename. Default: sort_log.json"
msgstr ""

